
- IF WE ARE NOT USING LOMBOK THEN WE HAVE TO MANUALLY ADD THE JAR OF APACHE LOG4J TO OUR POM.XML FILE
- LOGGER IS A INTERFACE AND HENCE WE CANNOT CREATE AN OBJECT OF IT, SO WE HAVE TO MAKE IT private static final

#For logging- check this in application.properties

%d-date and time
%d{HH:mm:ss.SSS}- time only
%d{dd-MM-yyyy}- date using this format, we can add time also in this
%m-message
%n- new line
%p- logging level
%c- class name
%M- method name
%t- thread

--DURING LOGGING OUR SYSTEM WILL CHECK THE BELOW FILES IN THE GIVEN ORDER TO SEE HOW THE LOGGING IS DEFINED
LOGBACK-TEST.XML
LOGBACK-GROOVY
LOGBACK.XML
JDK FEATURE (CALLED SERVICE PROVIDER FACILITY WILL TRY TO CONFIGURE BY ITSELF)
FINALLY BY DEFAULT LOG TO CONSOLE
APPLICATION.PROPERTIES

--WE WILL TAKE CONTROL OF OUR LOGGING THINGS IN PRODUCTION GRADE APPLICATION AND HENCE WE WILL CREATE A
LOGBACK.XML FILE IN RESOURCES FOLDER

--TO EXCLUDE DEFAULT LOGGING AND TO ADD LOG4J2 IN OUR APPLICATION DO THE FOLLOWING THINGS

 exclude spring-boot-starter-logging dependency from spring-boot-starter and
 explicitly include the spring-boot-starter-log4j2 in the build file.
 <dependency>
     <groupId>org.springframework.boot</groupId>
     <artifactId>spring-boot-starter</artifactId>
     <exclusions>
         <exclusion>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-logging</artifactId>
         </exclusion>
     </exclusions>
 </dependency>
 <dependency>
     <groupId>org.springframework.boot</groupId>
     <artifactId>spring-boot-starter-log4j2</artifactId>
 </dependency>

 --ADD A FILE IN THE RESOURCES FOLDER WITH ANY OF THE BELOW NAMES
 log4j2-spring.xml
 log4j2.xml

